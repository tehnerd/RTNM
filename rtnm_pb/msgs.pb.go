// Code generated by protoc-gen-go.
// source: msgs.proto
// DO NOT EDIT!

/*
Package rtnm_pb is a generated protocol buffer package.

It is generated from these files:
	msgs.proto

It has these top-level messages:
	MSGS
	ProbeRegister
	MasterRegConfirm
	ProbeHello
	AddProbe
	RemoveProbe
*/
package rtnm_pb

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

// metamessage; which we could test for submsg
// instead of implementing TLV logick directly
type MSGS struct {
	PReg             *ProbeRegister    `protobuf:"bytes,1,opt" json:"PReg,omitempty"`
	RConf            *MasterRegConfirm `protobuf:"bytes,2,opt" json:"RConf,omitempty"`
	Hello            *ProbeHello       `protobuf:"bytes,3,opt" json:"Hello,omitempty"`
	AProbe           *AddProbe         `protobuf:"bytes,4,opt" json:"AProbe,omitempty"`
	RProbe           *RemoveProbe      `protobuf:"bytes,5,opt" json:"RProbe,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *MSGS) Reset()         { *m = MSGS{} }
func (m *MSGS) String() string { return proto.CompactTextString(m) }
func (*MSGS) ProtoMessage()    {}

func (m *MSGS) GetPReg() *ProbeRegister {
	if m != nil {
		return m.PReg
	}
	return nil
}

func (m *MSGS) GetRConf() *MasterRegConfirm {
	if m != nil {
		return m.RConf
	}
	return nil
}

func (m *MSGS) GetHello() *ProbeHello {
	if m != nil {
		return m.Hello
	}
	return nil
}

func (m *MSGS) GetAProbe() *AddProbe {
	if m != nil {
		return m.AProbe
	}
	return nil
}

func (m *MSGS) GetRProbe() *RemoveProbe {
	if m != nil {
		return m.RProbe
	}
	return nil
}

// msg, which probe sends to master during startup
type ProbeRegister struct {
	ProbeIp          *string `protobuf:"bytes,1,opt" json:"ProbeIp,omitempty"`
	ProbeLocation    *string `protobuf:"bytes,2,opt" json:"ProbeLocation,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProbeRegister) Reset()         { *m = ProbeRegister{} }
func (m *ProbeRegister) String() string { return proto.CompactTextString(m) }
func (*ProbeRegister) ProtoMessage()    {}

func (m *ProbeRegister) GetProbeIp() string {
	if m != nil && m.ProbeIp != nil {
		return *m.ProbeIp
	}
	return ""
}

func (m *ProbeRegister) GetProbeLocation() string {
	if m != nil && m.ProbeLocation != nil {
		return *m.ProbeLocation
	}
	return ""
}

// msg from master to probe during startup
type MasterRegConfirm struct {
	ProbeKA          *uint32 `protobuf:"varint,1,opt" json:"ProbeKA,omitempty"`
	TestsList        *string `protobuf:"bytes,2,opt" json:"TestsList,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MasterRegConfirm) Reset()         { *m = MasterRegConfirm{} }
func (m *MasterRegConfirm) String() string { return proto.CompactTextString(m) }
func (*MasterRegConfirm) ProtoMessage()    {}

func (m *MasterRegConfirm) GetProbeKA() uint32 {
	if m != nil && m.ProbeKA != nil {
		return *m.ProbeKA
	}
	return 0
}

func (m *MasterRegConfirm) GetTestsList() string {
	if m != nil && m.TestsList != nil {
		return *m.TestsList
	}
	return ""
}

// keepalive msg
type ProbeHello struct {
	Hello            *string `protobuf:"bytes,1,opt" json:"Hello,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProbeHello) Reset()         { *m = ProbeHello{} }
func (m *ProbeHello) String() string { return proto.CompactTextString(m) }
func (*ProbeHello) ProtoMessage()    {}

func (m *ProbeHello) GetHello() string {
	if m != nil && m.Hello != nil {
		return *m.Hello
	}
	return ""
}

// msg from master to probe, master send it when
// new probe registers
type AddProbe struct {
	ProbeIp          *string `protobuf:"bytes,1,opt" json:"ProbeIp,omitempty"`
	ProbeLocation    *string `protobuf:"bytes,2,opt" json:"ProbeLocation,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AddProbe) Reset()         { *m = AddProbe{} }
func (m *AddProbe) String() string { return proto.CompactTextString(m) }
func (*AddProbe) ProtoMessage()    {}

func (m *AddProbe) GetProbeIp() string {
	if m != nil && m.ProbeIp != nil {
		return *m.ProbeIp
	}
	return ""
}

func (m *AddProbe) GetProbeLocation() string {
	if m != nil && m.ProbeLocation != nil {
		return *m.ProbeLocation
	}
	return ""
}

// msg fro master to probe, master send it when
// some probe timed out
type RemoveProbe struct {
	ProbeIp          *string `protobuf:"bytes,1,opt" json:"ProbeIp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RemoveProbe) Reset()         { *m = RemoveProbe{} }
func (m *RemoveProbe) String() string { return proto.CompactTextString(m) }
func (*RemoveProbe) ProtoMessage()    {}

func (m *RemoveProbe) GetProbeIp() string {
	if m != nil && m.ProbeIp != nil {
		return *m.ProbeIp
	}
	return ""
}

func init() {
}
